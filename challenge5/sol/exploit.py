from Crypto.Util.number import long_to_bytes, inverse

def exploit():
    # Lade die Ã¶ffentlichen Daten
    with open("../public_key.txt", "r") as f:
        lines = f.readlines()
        n = int(lines[0].split(": ")[1].strip())
        e = int(lines[1].split(": ")[1].strip())

    with open("../ciphertext.txt", "r") as f:
        ciphertext = int(f.readline().split(": ")[1].strip())

    p = 13
    q = n // p 

    phi_n = (p - 1) * (q - 1)

    d = inverse(e, phi_n)

    decrypted_message = pow(ciphertext, d, n)

    decrypted_flag = long_to_bytes(decrypted_message).decode()
    
    print(f"Decrypted Flag: {decrypted_flag}")

if __name__ == "__main__":
    exploit()
